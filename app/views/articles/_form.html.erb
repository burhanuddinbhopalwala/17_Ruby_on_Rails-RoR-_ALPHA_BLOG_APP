<%= render("shared/errors", obj: @article) %>
<div class = "container">
    <div class = "row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <%= form_with(model: @article, 
                :html => {class: "form-horizontal", role: "form"}, 
                local: true) do |form| %>
                <div class = "form-group">                
                    <div class="control-label col-xs-2 col-sm-2 col-md-2 col-lg-2">
                        <%= form.label :title %><br/>
                    </div>
                    <div class = "col-xs-8 col-sm-8 col-md-8 col-lg-8">
                        <%= form.text_field :title, class: "form-control", 
                        placeholder: "Title of article", autofocus: true %>
                    </div>
                </div>
                
                <div class = "form-group">                
                    <div class="control-label col-xs-2 col-sm-2 col-md-2 col-lg-2">
                        <%= form.label :description %><br/>
                    </div>
                    <div class = "col-xs-8 col-sm-8 col-md-8 col-lg-8">
                        <%= form.text_area :text, rows: 10, class: "form-control", 
                        placeholder: "Body of article", autofocus: true %>
                    </div>
                </div>
                
                <div class = "form-group">                
                    <div class = "col-xs-offset-2 col-sm-offset-2 
                    col-md-offset-2 col-lg-offset-2 col-xs-8 col-sm-8 
                    col-md-8 col-lg-8">
                        <%= form.collection_check_boxes :category_ids, Category.all, :id, :name do |cb| %>
                            <% cb.label(class: "checkbox-inline input_checkbox") {cb.check_box(class: "checkbox") + cb.text} %>
                        <% end %>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="col-xs-offset-2 col-sm-offset-2 col-md-offset-2 col-lg-offset-2 col-xs-10 col-sm-10 col-md-10 col-lg-10">
                        <%= form.submit class: 'btn btn-primary btn-lg' %>
                    </div>
                </div>         
            <% end %>
            <div class="col-xs-offset-4 col-sm-offset-4 col-md-offset-4 col-lg-offset-4 col-xs-4 col-sm-4 col-md-4 col-lg-4">
                [ <%= link_to "Cancel request and return to articles listing", articles_path() %> ]
            </div>
        </div>
    </div>
</div>

<!-- 
    2: To create a form within this template, you will use a form 
    builder. The primary form builder for Rails is provided by a 
    helper method called form_with
    
    3: Equivalent html of ERB form and fixes for form_with(scope: 
    :article, local: true) do |form| (OLDER Form) is:
    <form action="/articles/new" accept-charset="UTF-8" method="post"><input name="utf8" value="âœ“" type="hidden"><input name="authenticity_token" value="J0UOCh+Uzn49atRld1oHh9713nvy4oUNNvokNXCdZNcxN3DcYxQfRupBAS6hSCPIPuYkdbVljS5QvWvwbdhSKA==" type="hidden">
        <p>
            <label for="article_title">Title</label><br>
            <input name="article[title]" type="text"><br>
        </p>

        <p>
            <label for="article_title">Title</label><br>
            <input name="article[title]" type="text"><br>
        </p>

        <p> <input name="commit" value="Save Article" data-disable-with="Save Article" type="submit"> </p>
    </form>

    - TO FIX THE ABOVE FORM ACTION PROBLEM:
    form_with(scope: :article, url: articles_path(), local: true), 
    The articles_path helper above form tells Rails to point the form 
    to the URI Pattern associated with the articles prefix; and the 
    form will (by default) send a POST request to that route. This is 
    associated with the create action of the current controller, the 
    ArticlesController. After this, 
    form action: POST  /articles(.:format)  articles#create

    - By default form_with() submits forms using Ajax thereby 
    skipping full page redirects. To make this guide easier to 
    get into I've disabled that with local: true for now

    4: IMP FOR CURRENT FORM: The reason we can use this shorter, 
    simpler form_with() declaration to stand in for either of the 
    other forms is for 2 reasons: 
    
        - @article is a resource corresponding to a full set of 
        RESTful routes, and Rails is able to infer which URI and 
        method to use automagically
        
        -   The arguments to form_with() could be model objects, 
        say, model: @article which would cause the helper to fill 
        in the form with the fields of the object. Passing in a 
        symbol scope (scope: :article) just creates the fields 
        but without anything filled into them. More details can 
        be found in form_with() documentation
-->